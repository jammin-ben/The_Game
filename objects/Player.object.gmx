<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Player_s</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Gravity, friction, max movement speed, jump power, acceleration, in air jump count 1, jump buffer 5, off edge buffer 30, bullet knockback, max Air speed
InitializePlayerValues_script(.45,.9,7.5,11,2.5,0,0,30,20,30,15);
noButtons=false
reloadTimer=-1
reloadTimer2=-1
shotgunShells=2
knockbackTimer=-1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!noButtons){
CheckForKeyboardInput_script();}
CheckCollisions_script();
MovePlayer_script();
TimerControl_script();
if(Control.hitTimer1&gt;0)
    noButtons=true;
    
else noButtons = false;

if(reloadTimer&gt;0) reloadTimer -=1
if(reloadTimer==0) {
    clipSize=8
    reloadTimer =-1
} 

if(clipSize==0&amp;&amp;onGround) {
    reloadTimer=60
    clipSize-=1
}

if(reloadTimer2&gt;0) reloadTimer2 -=1
if(reloadTimer2==0) {
    shotgunShells=2
    reloadTimer2 =-1
} 
if(shotgunShells==0&amp;&amp;onGround) {
    reloadTimer2=60
    shotgunShells-=1
}

if(knockbackTimer&gt;0) knockbackTimer -=1

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Player2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(other.vSpeed&gt;vSpeed&amp;&amp;other.vSpeed&gt;0&amp;&amp;Control.timer==-1) {
    other.vSpeed = -10
    if(Control.goRight==true)
        hSpeed= 16
     
        
    if(Control.goRight==false)
        hSpeed= -16
       
    Control.timer= 20
    
    Control.hitTimer1=20
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>maxSpeed=15
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(shotgunShells&gt;0){
    knockbackTimer=35
    shotgunShells-=1
    audio_play_sound(Shoot,2,false)
    
    for(i=0;i&lt;8;i+=1){    
    
        bullet = instance_create(x,y,shotgunBullet);    
       // bullet.speed = 12+random(4);
        bullet.direction = point_direction(x, y, mouse_x, mouse_y)-12.5+random(25);
        bullet.image_angle = bullet.direction;
    }

    if (onGround==false){
        if(abs(hSpeed -knockBack*.75*cos(pi/(180)*point_direction(x,y,mouse_x,mouse_y)))&lt;maxHSpeed){
            hSpeed =knockBack*-.75*cos(pi/(180)*point_direction(x,y,mouse_x,mouse_y));
        }
        else if(abs(hSpeed -knockBack*.75*cos(pi/(180)*point_direction(x,y,mouse_x,mouse_y)))&gt;=maxHSpeed){
            if(point_direction(x,y,mouse_x,mouse_y)&lt;270&amp;&amp;point_direction(x,y,mouse_x,mouse_y)&gt;90)hSpeed=maxHSpeed
            else(hSpeed)=-maxHSpeed
        }
       
         if(abs((vSpeed +knockBack*.75*sin(pi/(180)*point_direction(x,y,mouse_x,mouse_y))))&lt;maxVSpeed){
            vSpeed = knockBack*.75*sin(pi/(180)*point_direction(x,y,mouse_x,mouse_y));
        }
        else if(abs((vSpeed +knockBack*.75*sin(pi/(180)*point_direction(x,y,mouse_x,mouse_y))))&gt;=maxVSpeed){
            if(point_direction(x,y,mouse_x,mouse_y)&lt;180&amp;&amp;point_direction(x,y,mouse_x,mouse_y)&gt;0)vSpeed=maxVSpeed
            else vSpeed=-maxVSpeed
        }
    }
    
    //particle effect
    for(i=0;i&lt;20;i+=1){
        flash= instance_create(x,y,particle);
        flash.speed = 4+random(3);
        flash.direction=point_direction(x, y, mouse_x, mouse_y)-10+random(20);
    };
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    //view_xview[0] = obj_player.x - horizontal_border + 30;
    //view_yview[0] = obj_player.y - vertical_border +30;
    
    //clipSize -=1
    
    audio_play_sound(Shoot,2,false)
    
    bullet = instance_create(x,y,Bullet);
    bullet.speed = 25;
    bullet.direction = point_direction(x, y, mouse_x, mouse_y);
    bullet.image_angle = point_direction(x, y, mouse_x, mouse_y);
    
    //particle effect
    for(i=0;i&lt;10;i+=1){
        flash= instance_create(x,y,particle);
        flash.speed = 4+random(3);
        flash.direction=point_direction(x, y, mouse_x, mouse_y)-5+random(10);
    };

    /*if (onGround==false){
        if(abs(hSpeed -knockBack*.75*cos(pi/(180)*point_direction(x,y,mouse_x,mouse_y)))&lt;maxHSpeed){
            hSpeed -=knockBack*.75*cos(pi/(180)*point_direction(x,y,mouse_x,mouse_y));
        }
        else if(abs(hSpeed -knockBack*.75*cos(pi/(180)*point_direction(x,y,mouse_x,mouse_y)))&gt;=maxHSpeed){
            if(point_direction(x,y,mouse_x,mouse_y)&lt;270&amp;&amp;point_direction(x,y,mouse_x,mouse_y)&gt;90)hSpeed=maxHSpeed
            else(hSpeed)=-maxHSpeed
        }
       
         if(abs((vSpeed +knockBack*.75*sin(pi/(180)*point_direction(x,y,mouse_x,mouse_y))))&lt;maxVSpeed){
            vSpeed += knockBack*.75*sin(pi/(180)*point_direction(x,y,mouse_x,mouse_y));
        }
        else if(abs((vSpeed +knockBack*.75*sin(pi/(180)*point_direction(x,y,mouse_x,mouse_y))))&gt;=maxVSpeed){
            if(point_direction(x,y,mouse_x,mouse_y)&lt;180&amp;&amp;point_direction(x,y,mouse_x,mouse_y)&gt;0)vSpeed=maxVSpeed
            else vSpeed=-maxVSpeed
        }
    }*/
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for(i=0;i&lt;shotgunShells;i+=1){
    draw_circle_colour(24+12*i,32,5,c_gray,c_black,false)
}

//for(i=0;i&lt;clipSize;i+=1){
  //  draw_circle_colour(24+12*i,20,5,c_red,c_black,false)
//}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index,image_index,x,y,myScaleX,myScaleY,myRot,myCol,image_alpha);
draw_text(x,y-32,hSpeed)
draw_text(x,y+32,vSpeed)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>clipSize=0
shotgunShells=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="70">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>maxSpeed=7.5
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
